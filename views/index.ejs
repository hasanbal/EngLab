<!DOCTYPE html>
<html>
<head>
    <title>EngLab</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">

</head>
<style type="text/css">
  .gradient-custom {
  /* fallback for old browsers */
  background: #6a11cb;

  /* Chrome 10-25, Safari 5.1-6 */
  background: -webkit-linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));

  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  background: linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1))
}
  
</style>

<body class="gradient-custom">

    <div class="d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow">
      <h5 class="my-0 mr-md-auto font-weight-normal">EngLab</h5>
      <nav class="my-2 my-md-0 mr-md-3">

      </nav>
      <button class="btn btn-outline-primary" href="#" id="hesap"><%=username%></button> &nbsp&nbsp
      <% if (username == 'ziyaretci'){ %>
      <a class="btn btn-outline-primary" href="login" >Giriş Yap</a> &nbsp &nbsp
      <a class="btn btn-outline-primary" href="register" >Kayıt Ol</a> 
      <% } else{%>
      <a class="btn btn-outline-primary" href="logout" >Çıkış</a> 
      <% } %>
    </div>

    <div class="pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center container">
      <h1 class="display-4" style="color:white">EngLab'a Hoş Geldin</h1>
      <p class="lead" style="color:white">İngilizceyi daha eğlenceli öğrenmek için size özel geliştirilmiş <b>EngLab</b> platformuna hoş geldiniz. Aşağıda bulunan üç farklı oyundan birini oynayabilir veya <b>Anlam Öğren</b> seçeneği ile bir kelimenin anlamını öğrenerek hazinenize katabilirsiniz.</p>
    </div>

    <div class="container">
      <div class="card-deck mb-3 text-center">
        <div class="card mb-4 box-shadow">
          <div class="card-header">
            <h4 class="my-0 font-weight-normal">Yeni Kelime Getir</h4>
          </div>
          <div class="card-body">
            <ul class="list-unstyled mt-3 mb-4">
              <li>Kelime Getir'e basarak hazinenizde olmayan yeni bir kelime öğren.</li>
            </ul>
            <button type="button" class="btn btn-lg btn-block btn-primary" data-toggle="modal" data-target="#yeniKelimeModel" onclick="yeniKelime();">Yeni Kelime Getir</button>
          </div>
        </div>
        <div class="card mb-4 box-shadow">
          <div class="card-header">
            <h4 class="my-0 font-weight-normal">Havuzdan Kelime Getir</h4>
          </div>
          <div class="card-body">

            <ul class="list-unstyled mt-3 mb-4">
              <li>Havuzdan kelime getirerek kendini test et.</li>

            </ul><br>
            <button type="button" class="btn btn-lg btn-block btn-primary" data-toggle="modal" data-target="#havuzKelimeModel" onclick="havuzKelime();">Havuzdan Kelime Getir</button>
          </div>
        </div>
        <div class="card mb-4 box-shadow">
          <div class="card-header">
            <h4 class="my-0 font-weight-normal">Yazım Hatası Getir</h4>
          </div>
          <div class="card-body">
            <ul class="list-unstyled mt-3 mb-4">
              <li>Havuzundaki bir kelimenin yazım hatalı halini görerek doğrusunu bulmaya çalış.</li>
            </ul>
            <button type="button"  class="btn btn-lg btn-block btn-primary" data-toggle="modal" data-target="#yazimHatasiModel" onclick="yazimHatasi();" >Yazım Hatası Getir</button>
          </div>
        </div>
      </div>
        <div class="card mb-4 box-shadow">
          <div class="card-header">
            <h4 class="my-0 font-weight-normal">Anlam Öğren</h4>
          </div>
          <div class="card-body">
            <ul class="list-unstyled mt-3 mb-4">
              <li>Dilediğin Türkçe veya İngilizce bir kelimenin anlamını öğren.</li>
            </ul>
            <input checked type="radio" id="trk" name="language" value="trk">
            <label for="trk"><img src="https://iconarchive.com/download/i109320/wikipedia/flags/TR-Turkey-Flag.ico" width="32" ></label><br>
            <input type="radio" id="ing" name="language" value="ing">
            <label for="ing"><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4B3DffB4RV3Ss97zpRw3VyAdhjHHRVEqBFQ&usqp=CAU" width="32"></label><br>
            <b>Kelime:</b><br>
            <input type="text" id="anlamOgren" maxlength="50" placeholder="Araba">
            <br>
            <b>Anlam: </b> <p id="anlam"></p><br>
            <button onclick="anlamOgren();" type="button"  class="btn btn-lg btn-block btn-primary" >Anlam Öğren</button>
          </div>
        </div>

      </div>

<!-- Modal -->
<div class="modal fade" id="yeniKelimeModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Yeni Kelime Getir</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p id="yeniKelime"></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
        <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="">Havuza Ekle</button>
      </div>
    </div>
  </div>
</div>


<!-- Modal -->
<div class="modal fade" id="havuzKelimeModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Havuzdan Kelime Getir</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Kelime:
        <p id="havuzKelime"></p>
        <button type="button" class="btn btn-primary" id="secenek1" onclick="quiz('secenek1');" >Secenek 1</button><br><br>
        <button type="button" class="btn btn-primary" id="secenek2" onclick="quiz('secenek2');" >Secenek 2</button><br><br>
        <button type="button" class="btn btn-primary" id="secenek3" onclick="quiz('secenek3');">Secenek 3</button><br><br>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
        <button type="button" class="btn btn-primary" onclick="havuzKelime();">Tekrar Oyna</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="yazimHatasiModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Yazım Hatası Getir</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p id="bozukKelime"></p><br>
        <input type="text" id="bozukKelimeTahmin" maxlength="50"><br><br>
        <button class="btn btn-primary" onclick="bozukKelimeKontrol();" id="cevapla">Cevapla</button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
        <button type="button" class="btn btn-primary" onclick="yazimHatasi();">Tekrar Oyna</button>
      </div>
    </div>
  </div>
</div>


</body>
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

<script src="https://www.gstatic.com/firebasejs/5.9.4/firebase.js"></script>
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.3.0/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.3.0/firebase-analytics.js"></script>
<!-- Add Firebase products that you want to use -->
<script src="https://www.gstatic.com/firebasejs/6.1.1/firebase-auth.js"></script>

<script src="https://www.gstatic.com/firebasejs/6.1.1/firebase-database.js"></script>

<script>
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional

    var cevap = "";
    var cevap2 = "";

    function yeniKelime() {
      fetch("kelimeler.json")
        .then(response => response.json())
        .then(kelimeler => {
          var len = Object.keys(kelimeler).length;
          var index = Math.floor(Math.random()*len);
          var kelime = Object.keys(kelimeler)[index];
          document.getElementById("yeniKelime").innerHTML = "<b>Yeni Kelime:</b> "+ kelime;
          document.getElementById("yeniKelime").innerHTML += "<br><b>Anlam:</b> "+ kelimeler[kelime];

          havuzaEkle(kelime, kelimeler[kelime]);

        });

    }

    function anlamOgren() {
      let word = document.getElementById("anlamOgren").value;
      let lang = document.querySelector('input[name="language"]:checked').value;

      let url = "https://tureng.com/tr/turkce-ingilizce/"+word;
      $.get( url , function( data ) {
        var el = document.createElement( 'html' );
        el.innerHTML = data;

        var anlamTrk = el.querySelector("#englishResultsTable > tbody > tr:nth-child(4) > td.tr.ts > a").innerHTML;
        var anlamIng = el.querySelector("#englishResultsTable > tbody > tr:nth-child(4) > td.en.tm > a").innerHTML;


        if (lang == "trk") {
          $( "#anlam" ).html( anlamIng );
        } else {
          $( "#anlam" ).html( anlamTrk );
        }
        if (lang == "ing") {
          havuzaEkle(word, anlamTrk);
        } else {
          havuzaEkle(anlamIng, word);
        }

      });
    }

    function havuzaEkle(kelime, anlam) {
      let username = document.getElementById("hesap").innerHTML;
      $.post("havuzaEkle", {"username":username, "kelime":kelime, "anlam":anlam});
    }

    async function havuzdanAl() {
      let username = document.getElementById("hesap").innerHTML;
      let kelimeAnlam = await Promise.resolve($.post("havuzdanGetir", $.param({"username":username})));
      return kelimeAnlam;
    }

    async function yazimHatasi() {
      document.getElementById("cevapla").classList.remove("btn-danger");
      document.getElementById("cevapla").classList.remove("btn-success");
      document.getElementById("bozukKelimeTahmin").value = "";
      var kelime = await havuzdanAl();
      kelime = kelime["kelime"];

      var yeniKelime = "";

      var index = Math.floor(Math.random()*kelime.length);
      var harfler="abcdefghijklmnopqrstuvwxyz";
      var harf = ""
      while (true) {
        var index2 = Math.floor(Math.random()*26);
        if (harfler.charAt(index2) != kelime.charAt(index)) {
          harf = harfler[index2];
          break;
        }
      }
      for (var i=0; i<kelime.length; i++) {
        if (i == index)
          yeniKelime += harf;
        else
          yeniKelime += kelime[i];
      }
      cevap = kelime;
      document.getElementById("bozukKelime").innerHTML = yeniKelime;

    }

    function bozukKelimeKontrol() {
      var kelime = document.getElementById("bozukKelimeTahmin").value;
      if (kelime != cevap) {
        document.getElementById("cevapla").classList.add("btn-danger");
        document.getElementById("bozukKelimeTahmin").value = cevap;
      } else {
        document.getElementById("cevapla").classList.add("btn-success");
      }
    }


    function havuzKelime() {
      document.getElementById("secenek1").classList.remove("btn-success");
      document.getElementById("secenek2").classList.remove("btn-success");
      document.getElementById("secenek3").classList.remove("btn-success");
      document.getElementById("secenek1").classList.remove("btn-danger");
      document.getElementById("secenek2").classList.remove("btn-danger");
      document.getElementById("secenek3").classList.remove("btn-danger");


      fetch("kelimeler.json")
        .then(response => response.json())
        .then(async kelimeler => {
          var len = Object.keys(kelimeler).length;

          var kelimeAnlam = await havuzdanAl();
          var kelime = kelimeAnlam["kelime"];

          document.getElementById("havuzKelime").innerHTML = kelime;
          
          var anlam = kelimeAnlam["anlam"];
          cevap2 = anlam;

          var secenekler = [anlam];

          for (var i=0; i<2; i++) {
            while(true){
              var index = Math.floor(Math.random()*len);
              var kelime = Object.keys(kelimeler)[index];
              var anlam = kelimeler[kelime];

              if (secenekler.indexOf(anlam) == -1){
                secenekler.push(kelimeler[Object.keys(kelimeler)[index]]);
                break;
              }
            }
          }
          secenekler = shuffle(secenekler);

          document.getElementById("secenek1").innerHTML = secenekler[0];
          document.getElementById("secenek2").innerHTML = secenekler[1];
          document.getElementById("secenek3").innerHTML = secenekler[2];
        });
    }

    function quiz(isaretlenen) {
      var kelime = document.getElementById("havuzKelime").innerHTML;
      var anlam = cevap2;

      if (document.getElementById(isaretlenen).innerHTML == anlam) {
        document.getElementById(isaretlenen).classList.add("btn-success");
      } else {
        document.getElementById(isaretlenen).classList.add("btn-danger");
      }

    }

    function shuffle(array) {
      let currentIndex = array.length,  randomIndex;
      while (currentIndex != 0) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;
        [array[currentIndex], array[randomIndex]] = [
          array[randomIndex], array[currentIndex]];
      }

      return array;
    }


</script>

</body>
</html>

